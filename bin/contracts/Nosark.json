{
    "contractName": "Nosark",
    "abi": [
        {
            "inputs": [],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "allowance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientAllowance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "needed",
                    "type": "uint256"
                }
            ],
            "name": "ERC20InsufficientBalance",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "approver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidApprover",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "receiver",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidReceiver",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "sender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSender",
            "type": "error"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "ERC20InvalidSpender",
            "type": "error"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "inputs": [],
            "name": "_supply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "_totalsupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                }
            ],
            "name": "allowance",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "spender",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "account",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "decimals",
            "outputs": [
                {
                    "internalType": "uint8",
                    "name": "",
                    "type": "uint8"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_supply1",
                    "type": "uint256"
                }
            ],
            "name": "initialsupply",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "totalSupply",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "value",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_supply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalsupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supply1\",\"type\":\"uint256\"}],\"name\":\"initialsupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"c:/Users/nooru/OneDrive/Desktop/work/learning/testcoin/contracts/Nosark.sol\":\"Nosark\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"c:/Users/nooru/OneDrive/Desktop/work/learning/testcoin/contracts/Nosark.sol\":{\"keccak256\":\"0xd2a6aac63fd7519913c44a76c461d9695a6efca878ed610aa9a541b5ded3bcae\",\"urls\":[\"bzz-raw://b60bcea8e57f7b18ee0a144ace8d612ecbf9b51238e045a712d7930bae6dbdd3\",\"dweb:/ipfs/QmXhehFBUyxNzwAyeDQJr5urWeUHMu7tHVaG4QScQEt9WP\"]},\"c:/Users/nooru/OneDrive/Desktop/work/learning/testcoin/node_modules/@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"c:/Users/nooru/OneDrive/Desktop/work/learning/testcoin/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"c:/Users/nooru/OneDrive/Desktop/work/learning/testcoin/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"c:/Users/nooru/OneDrive/Desktop/work/learning/testcoin/node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"c:/Users/nooru/OneDrive/Desktop/work/learning/testcoin/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
    "bytecode": "6080604052346103cd57604080519081016001600160401b038111828210176102e057604090815260068252654e4f5341524b60d01b602083015280519081016001600160401b038111828210176102e05760405260028152614e4b60f01b602082015281516001600160401b0381116102e057600354600181811c911680156103c3575b60208210146102c257601f8111610360575b50602092601f82116001146102ff57928192935f926102f4575b50508160011b915f199060031b1c1916176003555b80516001600160401b0381116102e057600454600181811c911680156102d6575b60208210146102c257601f811161025f575b50602091601f82116001146101ff579181925f926101f4575b50508160011b915f199060031b1c1916176004555b6a295be96e64066972000000600555600680546001600160a01b03191633908117909155156101e1576002546a295be96e6406697200000081018091116101cd57600255335f525f60205260405f206a295be96e6406697200000081540190556040516a295be96e6406697200000081525f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a36040516107b190816103d28239f35b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b015190505f80610111565b601f1982169260045f52805f20915f5b8581106102475750836001951061022f575b505050811b01600455610126565b01515f1960f88460031b161c191690555f8080610221565b9192602060018192868501518155019401920161020f565b60045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c810191602084106102b8575b601f0160051c01905b8181106102ad57506100f8565b5f81556001016102a0565b9091508190610297565b634e487b7160e01b5f52602260045260245ffd5b90607f16906100e6565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100b0565b601f1982169360035f52805f20915f5b8681106103485750836001959610610330575b505050811b016003556100c5565b01515f1960f88460031b161c191690555f8080610322565b9192602060018192868501518155019401920161030f565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c810191602084106103b9575b601f0160051c01905b8181106103ae5750610096565b5f81556001016103a1565b9091508190610398565b90607f1690610084565b5f80fdfe6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146105ac57508063095ea7b31461052a578063159457901461027b57806318160ddd1461050d57806323b872dd1461042d578063313ce5671461041257806370a08231146103db5780638da5cb5b146103b357806395d89b4114610298578063a393dc441461027b578063a9059cbb1461024a578063d05382a7146100ff5763dd62ed3e146100ab575f80fd5b346100fb5760403660031901126100fb576100c46106a5565b6100cc6106bb565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b5f80fd5b346100fb5760203660031901126100fb57600654600435906001600160a01b03163303610205576a52b7d2dcc80cd2e4000000600554116101cf5733156101bc576002548181018091116101a857600255335f525f60205260405f208181540190556040518181525f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a36a295be96e6406697200000081018091116101a857600555005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b60405162461bcd60e51b815260206004820152600e60248201526d131253525508115610d15151115160921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e65720000000000000000006044820152606490fd5b346100fb5760403660031901126100fb576102706102666106a5565b60243590336106d1565b602060405160018152f35b346100fb575f3660031901126100fb576020600554604051908152f35b346100fb575f3660031901126100fb576040515f6004548060011c906001811680156103a9575b602083108114610395578285529081156103795750600114610324575b50819003601f01601f191681019067ffffffffffffffff8211818310176103105761030c8291826040528261067b565b0390f35b634e487b7160e01b5f52604160045260245ffd5b905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5f905b828210610363575060209150820101826102dc565b600181602092548385880101520191019061034e565b90506020925060ff191682840152151560051b820101826102dc565b634e487b7160e01b5f52602260045260245ffd5b91607f16916102bf565b346100fb575f3660031901126100fb576006546040516001600160a01b039091168152602090f35b346100fb5760203660031901126100fb576001600160a01b036103fc6106a5565b165f525f602052602060405f2054604051908152f35b346100fb575f3660031901126100fb57602060405160128152f35b346100fb5760603660031901126100fb576104466106a5565b61044e6106bb565b6001600160a01b0382165f81815260016020818152604080842033855290915290912054919360443593929091810161048d575b5061027093506106d1565b8381106104f25784156104df5733156104cc57610270945f52600160205260405f2060018060a01b0333165f526020528360405f209103905584610482565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b346100fb575f3660031901126100fb576020600254604051908152f35b346100fb5760403660031901126100fb576105436106a5565b6024359033156104df576001600160a01b03169081156104cc57335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100fb575f3660031901126100fb575f6003548060011c90600181168015610671575b60208310811461039557828552908115610379575060011461061c5750819003601f01601f191681019067ffffffffffffffff8211818310176103105761030c8291826040528261067b565b905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5f905b82821061065b575060209150820101826102dc565b6001816020925483858801015201910190610646565b91607f16916105d0565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b03821682036100fb57565b602435906001600160a01b03821682036100fb57565b6001600160a01b0316908115610768576001600160a01b03169182156101bc57815f525f60205260405f205481811061074f57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffdfea2646970667358221220b32bc1b365d8366f71f26ae1ae01f9a6fc0772d78db30c25c55b5aa567bcd8d764736f6c634300081c0033",
    "deployedBytecode": "6080806040526004361015610012575f80fd5b5f3560e01c90816306fdde03146105ac57508063095ea7b31461052a578063159457901461027b57806318160ddd1461050d57806323b872dd1461042d578063313ce5671461041257806370a08231146103db5780638da5cb5b146103b357806395d89b4114610298578063a393dc441461027b578063a9059cbb1461024a578063d05382a7146100ff5763dd62ed3e146100ab575f80fd5b346100fb5760403660031901126100fb576100c46106a5565b6100cc6106bb565b6001600160a01b039182165f908152600160209081526040808320949093168252928352819020549051908152f35b5f80fd5b346100fb5760203660031901126100fb57600654600435906001600160a01b03163303610205576a52b7d2dcc80cd2e4000000600554116101cf5733156101bc576002548181018091116101a857600255335f525f60205260405f208181540190556040518181525f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a36a295be96e6406697200000081018091116101a857600555005b634e487b7160e01b5f52601160045260245ffd5b63ec442f0560e01b5f525f60045260245ffd5b60405162461bcd60e51b815260206004820152600e60248201526d131253525508115610d15151115160921b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f63616c6c6572206973206e6f7420746865206f776e65720000000000000000006044820152606490fd5b346100fb5760403660031901126100fb576102706102666106a5565b60243590336106d1565b602060405160018152f35b346100fb575f3660031901126100fb576020600554604051908152f35b346100fb575f3660031901126100fb576040515f6004548060011c906001811680156103a9575b602083108114610395578285529081156103795750600114610324575b50819003601f01601f191681019067ffffffffffffffff8211818310176103105761030c8291826040528261067b565b0390f35b634e487b7160e01b5f52604160045260245ffd5b905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5f905b828210610363575060209150820101826102dc565b600181602092548385880101520191019061034e565b90506020925060ff191682840152151560051b820101826102dc565b634e487b7160e01b5f52602260045260245ffd5b91607f16916102bf565b346100fb575f3660031901126100fb576006546040516001600160a01b039091168152602090f35b346100fb5760203660031901126100fb576001600160a01b036103fc6106a5565b165f525f602052602060405f2054604051908152f35b346100fb575f3660031901126100fb57602060405160128152f35b346100fb5760603660031901126100fb576104466106a5565b61044e6106bb565b6001600160a01b0382165f81815260016020818152604080842033855290915290912054919360443593929091810161048d575b5061027093506106d1565b8381106104f25784156104df5733156104cc57610270945f52600160205260405f2060018060a01b0333165f526020528360405f209103905584610482565b634a1406b160e11b5f525f60045260245ffd5b63e602df0560e01b5f525f60045260245ffd5b8390637dc7a0d960e11b5f523360045260245260445260645ffd5b346100fb575f3660031901126100fb576020600254604051908152f35b346100fb5760403660031901126100fb576105436106a5565b6024359033156104df576001600160a01b03169081156104cc57335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b346100fb575f3660031901126100fb575f6003548060011c90600181168015610671575b60208310811461039557828552908115610379575060011461061c5750819003601f01601f191681019067ffffffffffffffff8211818310176103105761030c8291826040528261067b565b905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5f905b82821061065b575060209150820101826102dc565b6001816020925483858801015201910190610646565b91607f16916105d0565b602060409281835280519182918282860152018484015e5f828201840152601f01601f1916010190565b600435906001600160a01b03821682036100fb57565b602435906001600160a01b03821682036100fb57565b6001600160a01b0316908115610768576001600160a01b03169182156101bc57815f525f60205260405f205481811061074f57817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b8263391434e360e21b5f5260045260245260445260645ffd5b634b637e8f60e11b5f525f60045260245ffdfea2646970667358221220b32bc1b365d8366f71f26ae1ae01f9a6fc0772d78db30c25c55b5aa567bcd8d764736f6c634300081c0033",
    "sourceMap": "168:654:0:-:0;;;;;;;;;;;;-1:-1:-1;;;;;168:654:0;;;;;;;;;;;;;;;-1:-1:-1;;;168:654:0;;;;;;;;;-1:-1:-1;;;;;168:654:0;;;;;;;;;;;;;-1:-1:-1;;;168:654:0;;;;;;-1:-1:-1;;;;;168:654:0;;;;1667:13:2;168:654:0;;;;;;;;;;;-1:-1:-1;168:654:0;;;;;;;;;;;-1:-1:-1;168:654:0;;;;;;;;;;;;;;-1:-1:-1;168:654:0;;;;;;;;;;;;;1667:13:2;168:654:0;;;;;1667:13:2;168:654:0;;;;-1:-1:-1;;;;;168:654:0;;;;1690:17:2;168:654:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:654:0;;;;;;;;;;;;;1667:13:2;168:654:0;;;;;1690:17:2;168:654:0;;225:16;;168:654;;;;-1:-1:-1;;;;;;168:654:0;332:10;168:654;;;;;;7528:21:2;7524:91;;168:654:0;;225:16;168:654;;;;;;;;;332:10;-1:-1:-1;168:654:0;-1:-1:-1;168:654:0;;;-1:-1:-1;168:654:0;225:16;168:654;;;;;;;225:16;168:654;;-1:-1:-1;7083:25:2;168:654:0;332:10;7083:25:2;;168:654:0;;;;;;;;;;;;;-1:-1:-1;168:654:0;;1690:17:2;168:654:0;;-1:-1:-1;168:654:0;7524:91:2;7572:32;;;-1:-1:-1;7572:32:2;-1:-1:-1;1690:17:2;168:654:0;;-1:-1:-1;7572:32:2;168:654:0;;;;-1:-1:-1;168:654:0;;;;;;;;;;1690:17:2;-1:-1:-1;168:654:0;;-1:-1:-1;168:654:0;;-1:-1:-1;168:654:0;;;;;;;;;;;;;;;;;;;;1690:17:2;168:654:0;;;;;;;;;;1667:13:2;168:654:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1690:17:2;-1:-1:-1;168:654:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:654:0;;;;;;;;;-1:-1:-1;168:654:0;;;;;;;;-1:-1:-1;168:654:0;;1690:17:2;168:654:0;;-1:-1:-1;168:654:0;;;;;;;;;;;;-1:-1:-1;168:654:0;;1690:17:2;168:654:0;;-1:-1:-1;168:654:0;;;;;-1:-1:-1;168:654:0;;;;;;;;;;1667:13:2;-1:-1:-1;168:654:0;;-1:-1:-1;168:654:0;;-1:-1:-1;168:654:0;;;;;;;;;;;;;;;;;;;;;1667:13:2;168:654:0;;;;;;;;;;1667:13:2;168:654:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:13:2;-1:-1:-1;168:654:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:654:0;;;;;;;;;-1:-1:-1;168:654:0;;;;;;;;;;;;;;",
    "deployedSourceMap": "168:654:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;168:654:0;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;168:654:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;168:654:0;;;;433:5;168:654;;;;-1:-1:-1;;;;;168:654:0;442:10;433:19;168:654;;592:17;581:7;168:654;581:28;168:654;;442:10;7528:21:2;7524:91;;6233:21;168:654:0;;;;;;;;;6233:21:2;168:654:0;442:10;168:654;;;;;;;;;;;;;;;;;;;;7083:25:2;168:654:0;442:10;7083:25:2;;698:16:0;168:654;;;;;;;581:7;168:654;;;;;;;;;;;;;;7524:91:2;7572:32;;;168:654:0;7572:32:2;168:654:0;;;;;7572:32:2;168:654:0;;;-1:-1:-1;;;168:654:0;;;;;;;;;;;;-1:-1:-1;;;168:654:0;;;;;;;;;;-1:-1:-1;;;168:654:0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;168:654:0;;;;3459:5:2;168:654:0;;:::i;:::-;;;735:10:5;;3459:5:2;:::i;:::-;168:654:0;;;;;;;;;;;;;-1:-1:-1;;168:654:0;;;;;804:7;168:654;;;;;;;;;;;;;-1:-1:-1;;168:654:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:654:0;;;;;-1:-1:-1;;168:654:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;168:654:0;;;;248:20;168:654;;;-1:-1:-1;;;;;168:654:0;;;;;;;;;;;;;;-1:-1:-1;;168:654:0;;;;-1:-1:-1;;;;;168:654:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;168:654:0;;;;;;;2780:2:2;168:654:0;;;;;;;;;-1:-1:-1;;168:654:0;;;;;;:::i;:::-;;;:::i;:::-;-1:-1:-1;;;;;168:654:0;;;;;;;;;;;;;;;735:10:5;168:654:0;;;;;;;;;;;;;;;;;10580:37:2;;10576:310;;168:654:0;4986:5:2;;;;;:::i;10576:310::-;10637:24;;;10633:130;;9813:19;;9809:89;;735:10:5;9911:21:2;9907:90;;4986:5;168:654:0;;;;;;;;;;;;;;735:10:5;168:654:0;-1:-1:-1;168:654:0;;;;;-1:-1:-1;168:654:0;;;;;10576:310:2;;;9907:90;9955:31;;;168:654:0;9955:31:2;168:654:0;;;;;9955:31:2;9809:89;9855:32;;;168:654:0;9855:32:2;168:654:0;;;;;9855:32:2;10633:130;10688:60;;;;;168:654:0;10688:60:2;735:10:5;168:654:0;;;;;;;;10688:60:2;168:654:0;;;;;;-1:-1:-1;;168:654:0;;;;;2927:12:2;168:654:0;;;;;;;;;;;;;-1:-1:-1;;168:654:0;;;;;;:::i;:::-;;;735:10:5;;9813:19:2;9809:89;;-1:-1:-1;;;;;168:654:0;;9911:21:2;;9907:90;;735:10:5;168:654:0;;;;;;;;;-1:-1:-1;168:654:0;;;;;-1:-1:-1;168:654:0;;;;;;;10085:31:2;168:654:0;735:10:5;10085:31:2;;168:654:0;;;;;;;;;;;;;-1:-1:-1;;168:654:0;;;;;1856:5:2;168:654:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;168:654:0;;;;;-1:-1:-1;;168:654:0;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1856:5:2;168:654:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;168:654:0;;;;:::o;:::-;;;;-1:-1:-1;;;;;168:654:0;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;168:654:0;;;;;;:::o;5393:300:2:-;-1:-1:-1;;;;;168:654:0;;5476:18:2;;5472:86;;-1:-1:-1;;;;;168:654:0;;5571:16:2;;5567:86;;168:654:0;5492:1:2;168:654:0;5492:1:2;168:654:0;;;5492:1:2;168:654:0;;6340:19:2;;;6336:115;;168:654:0;7083:25:2;168:654:0;;;;5492:1:2;168:654:0;5492:1:2;168:654:0;;;;5492:1:2;168:654:0;;;5492:1:2;168:654:0;5492:1:2;168:654:0;;;5492:1:2;168:654:0;;;;;;;;;;;;7083:25:2;5393:300::o;6336:115::-;6386:50;;;;5492:1;6386:50;;168:654:0;;;;;;5492:1:2;6386:50;5472:86;5517:30;;;5492:1;5517:30;5492:1;5517:30;168:654:0;;5492:1:2;5517:30",
    "sourcePath": "c:/Users/nooru/OneDrive/Desktop/work/learning/testcoin/contracts/Nosark.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.28+commit.7893614a"
    },
    "ast": {
        "absolutePath": "c:/Users/nooru/OneDrive/Desktop/work/learning/testcoin/contracts/Nosark.sol",
        "exportedSymbols": {
            "ERC20": [
                729
            ],
            "Nosark": [
                77
            ]
        },
        "id": 78,
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".20"
                ],
                "nodeType": "PragmaDirective",
                "src": "0:24:0"
            },
            {
                "absolutePath": "c:/Users/nooru/OneDrive/Desktop/work/learning/testcoin/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "file": "c:/Users/nooru/OneDrive/Desktop/work/learning/testcoin/node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol",
                "id": 3,
                "nameLocation": "-1:-1:-1",
                "nodeType": "ImportDirective",
                "scope": 78,
                "sourceUnit": 730,
                "src": "28:136:0",
                "symbolAliases": [
                    {
                        "foreign": {
                            "id": 2,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 729,
                            "src": "36:5:0",
                            "typeDescriptions": {}
                        },
                        "nameLocation": "-1:-1:-1"
                    }
                ],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 4,
                            "name": "ERC20",
                            "nameLocations": [
                                "187:5:0"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 729,
                            "src": "187:5:0"
                        },
                        "id": 5,
                        "nodeType": "InheritanceSpecifier",
                        "src": "187:5:0"
                    }
                ],
                "canonicalName": "Nosark",
                "contractDependencies": [],
                "contractKind": "contract",
                "fullyImplemented": true,
                "id": 77,
                "linearizedBaseContracts": [
                    77,
                    729,
                    119,
                    833,
                    807,
                    863
                ],
                "name": "Nosark",
                "nameLocation": "177:6:0",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "15945790",
                        "id": 8,
                        "mutability": "mutable",
                        "name": "_supply",
                        "nameLocation": "215:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 77,
                        "src": "200:41:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 6,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "200:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "value": {
                            "hexValue": "35305f3030305f303030",
                            "id": 7,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "225:16:0",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_50000000000000000000000000_by_1",
                                "typeString": "int_const 50000000000000000000000000"
                            },
                            "value": "50_000_000"
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "8da5cb5b",
                        "id": 10,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "263:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 77,
                        "src": "248:20:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 9,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "248:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 28,
                            "nodeType": "Block",
                            "src": "313:74:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 20,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 17,
                                            "name": "owner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10,
                                            "src": "324:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "expression": {
                                                "id": 18,
                                                "name": "msg",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 4294967281,
                                                "src": "332:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_message",
                                                    "typeString": "msg"
                                                }
                                            },
                                            "id": 19,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberLocation": "336:6:0",
                                            "memberName": "sender",
                                            "nodeType": "MemberAccess",
                                            "src": "332:10:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "324:18:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 21,
                                    "nodeType": "ExpressionStatement",
                                    "src": "324:18:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 23,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "359:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 24,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "363:6:0",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "359:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 25,
                                                "name": "_supply",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 8,
                                                "src": "371:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 22,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 569,
                                            "src": "353:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 26,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "353:26:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 27,
                                    "nodeType": "ExpressionStatement",
                                    "src": "353:26:0"
                                }
                            ]
                        },
                        "id": 29,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "hexValue": "4e4f5341524b",
                                        "id": 13,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "297:8:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_9548a48898469eee64d8f677ab33326f9ae3c164d1c4cd6ac76e0cdcb5924615",
                                            "typeString": "literal_string \"NOSARK\""
                                        },
                                        "value": "NOSARK"
                                    },
                                    {
                                        "hexValue": "4e4b",
                                        "id": 14,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "string",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "307:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_72502c1caeb718d69cf798d151fe698a8e9ba1f8765164a1fe7ee2be23a0c371",
                                            "typeString": "literal_string \"NK\""
                                        },
                                        "value": "NK"
                                    }
                                ],
                                "id": 15,
                                "kind": "baseConstructorSpecifier",
                                "modifierName": {
                                    "id": 12,
                                    "name": "ERC20",
                                    "nameLocations": [
                                        "291:5:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 729,
                                    "src": "291:5:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "291:21:0"
                            }
                        ],
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 11,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "288:2:0"
                        },
                        "returnParameters": {
                            "id": 16,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "313:0:0"
                        },
                        "scope": 77,
                        "src": "277:110:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 40,
                            "nodeType": "Block",
                            "src": "414:85:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 35,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 32,
                                                    "name": "owner",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 10,
                                                    "src": "433:5:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 33,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "442:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 34,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberLocation": "446:6:0",
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "442:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "433:19:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "63616c6c6572206973206e6f7420746865206f776e6572",
                                                "id": 36,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "453:25:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4",
                                                    "typeString": "literal_string \"caller is not the owner\""
                                                },
                                                "value": "caller is not the owner"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_98821890c044d63947a93cf48b7df1f5a42f89e719dd7abbb581002b013b02f4",
                                                    "typeString": "literal_string \"caller is not the owner\""
                                                }
                                            ],
                                            "id": 31,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "425:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 37,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "425:54:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 38,
                                    "nodeType": "ExpressionStatement",
                                    "src": "425:54:0"
                                },
                                {
                                    "id": 39,
                                    "nodeType": "PlaceholderStatement",
                                    "src": "490:1:0"
                                }
                            ]
                        },
                        "id": 41,
                        "name": "onlyowner",
                        "nameLocation": "402:9:0",
                        "nodeType": "ModifierDefinition",
                        "parameters": {
                            "id": 30,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "411:2:0"
                        },
                        "src": "393:106:0",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 67,
                            "nodeType": "Block",
                            "src": "562:160:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 51,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 49,
                                                    "name": "_supply",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 8,
                                                    "src": "581:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "<=",
                                                "rightExpression": {
                                                    "hexValue": "3130305f3030305f303030",
                                                    "id": 50,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "592:17:0",
                                                    "subdenomination": "ether",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_100000000000000000000000000_by_1",
                                                        "typeString": "int_const 100000000000000000000000000"
                                                    },
                                                    "value": "100_000_000"
                                                },
                                                "src": "581:28:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4c494d4954204558434545444544",
                                                "id": 52,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "611:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_4e1674390b710f5c094b6c4e66dc79c2e41e8ede35b9ab503fbd5a9384c593b1",
                                                    "typeString": "literal_string \"LIMIT EXCEEDED\""
                                                },
                                                "value": "LIMIT EXCEEDED"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_4e1674390b710f5c094b6c4e66dc79c2e41e8ede35b9ab503fbd5a9384c593b1",
                                                    "typeString": "literal_string \"LIMIT EXCEEDED\""
                                                }
                                            ],
                                            "id": 48,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "573:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 53,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "573:55:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 54,
                                    "nodeType": "ExpressionStatement",
                                    "src": "573:55:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 56,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "645:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 57,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberLocation": "649:6:0",
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "645:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 58,
                                                "name": "_supply1",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 43,
                                                "src": "657:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 55,
                                            "name": "_mint",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 569,
                                            "src": "639:5:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,uint256)"
                                            }
                                        },
                                        "id": 59,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "639:27:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 60,
                                    "nodeType": "ExpressionStatement",
                                    "src": "639:27:0"
                                },
                                {
                                    "expression": {
                                        "id": 65,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 61,
                                            "name": "_supply",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8,
                                            "src": "677:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "id": 64,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 62,
                                                "name": "_supply1",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 43,
                                                "src": "687:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                                "hexValue": "35305f3030305f303030",
                                                "id": 63,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "698:16:0",
                                                "subdenomination": "ether",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_50000000000000000000000000_by_1",
                                                    "typeString": "int_const 50000000000000000000000000"
                                                },
                                                "value": "50_000_000"
                                            },
                                            "src": "687:27:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "677:37:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 66,
                                    "nodeType": "ExpressionStatement",
                                    "src": "677:37:0"
                                }
                            ]
                        },
                        "functionSelector": "d05382a7",
                        "id": 68,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [
                            {
                                "id": 46,
                                "kind": "modifierInvocation",
                                "modifierName": {
                                    "id": 45,
                                    "name": "onlyowner",
                                    "nameLocations": [
                                        "552:9:0"
                                    ],
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 41,
                                    "src": "552:9:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "552:9:0"
                            }
                        ],
                        "name": "initialsupply",
                        "nameLocation": "516:13:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 44,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 43,
                                    "mutability": "mutable",
                                    "name": "_supply1",
                                    "nameLocation": "535:8:0",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 68,
                                    "src": "530:13:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 42,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "530:4:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "529:15:0"
                        },
                        "returnParameters": {
                            "id": 47,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "562:0:0"
                        },
                        "scope": 77,
                        "src": "507:215:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 75,
                            "nodeType": "Block",
                            "src": "786:33:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 73,
                                        "name": "_supply",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 8,
                                        "src": "804:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 72,
                                    "id": 74,
                                    "nodeType": "Return",
                                    "src": "797:14:0"
                                }
                            ]
                        },
                        "functionSelector": "a393dc44",
                        "id": 76,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "_totalsupply",
                        "nameLocation": "737:12:0",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 69,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "749:2:0"
                        },
                        "returnParameters": {
                            "id": 72,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 71,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nameLocation": "-1:-1:-1",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 76,
                                    "src": "772:7:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 70,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "772:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "771:9:0"
                        },
                        "scope": 77,
                        "src": "728:91:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 78,
                "src": "168:654:0",
                "usedErrors": [
                    89,
                    94,
                    99,
                    108,
                    113,
                    118
                ],
                "usedEvents": [
                    741,
                    750
                ]
            }
        ],
        "src": "0:824:0"
    },
    "functionHashes": {
        "_supply()": "15945790",
        "_totalsupply()": "a393dc44",
        "allowance(address,address)": "dd62ed3e",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "decimals()": "313ce567",
        "initialsupply(uint256)": "d05382a7",
        "name()": "06fdde03",
        "owner()": "8da5cb5b",
        "symbol()": "95d89b41",
        "totalSupply()": "18160ddd",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "393800",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "_supply()": "2300",
            "_totalsupply()": "2454",
            "allowance(address,address)": "2834",
            "approve(address,uint256)": "24325",
            "balanceOf(address)": "2537",
            "decimals()": "263",
            "initialsupply(uint256)": "77095",
            "name()": "infinite",
            "owner()": "2434",
            "symbol()": "infinite",
            "totalSupply()": "2322",
            "transfer(address,uint256)": "50974",
            "transferFrom(address,address,uint256)": "75549"
        }
    }
}